- hosts: all
  pre_tasks:
    - name: Update Cache
      apt:
        update_cache: yes
      tags:
        - core
        - iptables
        - docker

    - name: Wait for sudo
      shell: while sudo fuser /var/lib/dpkg/lock >/dev/null 2>&1; do sleep 5; done;

  tasks:
    - import_tasks: tasks/core.yml
    - import_tasks: tasks/iptables.yml
    - import_tasks: tasks/docker.yml

- hosts: all
  tasks:
    - name: Install k3s dependencies
      apt:
        name:
          - curl
          - gnupg
          - lsb-release
        state: present
        update_cache: yes

- hosts: jump-server
  tasks:
    - name: Initialize k3s cluster with embedded etcd
      shell: "curl -sfL https://get.k3s.io | sh -s - server --cluster-init"
      args:
        executable: /bin/bash
    
    - name: Name the server jump-server
      shell: "kubectl label nodes jump-server nodeName=jump-server"
    
    - name: Configure cert-manager
      shell: |
        kubectl create namespace cert-manager
        kubectl apply -f https://github.com/cert-manager/cert-manager/releases/download/v1.15.1/cert-manager.yaml
    
    - name: Create .kube directory if not exists
      file:
        path: "/root/.kube"
        state: directory
        mode: 0700

    - name: Copy admin.conf to root's kube config
      copy:
        src: "/etc/rancher/k3s/k3s.yaml"
        dest: "/root/.kube/config"
        remote_src: yes
        owner: root
        group: root
        mode: 0644

    - name: Set KUBECONFIG environment variable for root
      lineinfile:
        path: "/root/.bashrc"
        line: "export KUBECONFIG=/root/.kube/config"
        create: yes

    - name: Get k3s node token
      shell: "cat /var/lib/rancher/k3s/server/node-token"
      register: k3s_token

    - name: Set node token as a fact
      set_fact:
        node_token: "{{ k3s_token.stdout }}" 

- hosts: masters
  tasks:
    - name: Join k3s cluster as master
      shell: "curl -sfL https://get.k3s.io | K3S_URL='https://{{ hostvars[groups['jump-server'][0]].public_ip }}:6443' K3S_TOKEN='{{ hostvars[groups['jump-server'][0]].node_token }}' sh -s - server"
      args:
        executable: /bin/bash

- hosts: workers
  tasks:
    - name: Join k3s cluster as worker
      shell: "curl -sfL https://get.k3s.io | K3S_URL='https://{{ hostvars[groups['jump-server'][0]].public_ip }}:6443' K3S_TOKEN='{{ hostvars[groups['jump-server'][0]].node_token }}' sh -"
      args:
        executable: /bin/bash
